Non terminal = IDF commençant par une lettre minuscule
Terminal = IDF commençant par une lettre majuscule
/*exemple */
%%
x: Y42 ztu V;
ztu: A w b
   |A
   |
   ;
w:
   |x k
   ;
k:;
%%
/* fin exemple */

/* exo 3.1 */
/*lex*/
%%
"%%" {return(PP);}
: {return(DP);}
";" {return(PV);}
"|" {return(BARRE);}
[a-z][a-zA-Z0-9]* {return (NONTERMINAL);}
[A-Z][a-zA-Z0-9]* {return (TERM);}
%%


/*yacc*/
%token NONTERMINAL TERM
%token PP DP PV BARRE
%%
pgyacc : PP liste_regles PP
liste_regles : une_regle PV liste_regles
             | /*rien*/
             ;
une_regle : NONTERMINAL DP liste_alternatives
            ;
liste_alternatives : une_alternative BARRE liste_alternatives
                    | une_alternative
                    ;
une_alternative : symbole une_alternative
                |
                ;
symbole:TERM
        |NONTERMINAL
        ;
%%

int yyerror() /*redefinition de la fonction yyerror
{
    printf("Erreur de syntaxe en ligne %d\n", nblignes);
}



/*exo 3.2 */

temp312 pression42 vol18 temp346 temp18

07/09/2018 16:18:00 38 425 150 20 15
07/09/2018 16:18:15 38 426 152 18 14
07/09/2018 16:18:15 37 429 151 19 15
....................................
....................................
07/09/2018 17:05/30 40 528 155 20 5 

fichier: pl liste-lignes
pl: IDF pl
   | IDF
   ;
   
%{
int nbidf = 0;
int nbvals = 0;
int nblignes = 0
int tabval[5000][100];

%}

%token DATE HEURE
% token ENT IDF
%%
fichier : premiere_ligne lignes_suivantes
premiere_ligne:IDF {nbidf++;}
              | IDF premiere_ligne {nbidf++;}
              ;
lignes_suivantes : une_ligne {numligne++;}
                 | une_ligne lignes_suivantes {numligne++;}
                 ;
une_ligne: DATE HEURE liste_valeurs {(if nbidf>nbvals){printf("....");}}
    ;
liste_valeurs:  ENT {tabval[numligne][nbvals]=$1; nbvals++;}
             | ENT liste_valeurs {tabval[numligne][nbvals]=$1; nbvals++;}
             ;



%{
    #include "y.tab.h"
    int numero_ligne = 0;

%}
Jour (01|02|...|31)
mois (01|...|12)
annee (18|...|22)
heure (00|01|...|24)
minute(00|01|...|59)
seconde(00|01|...|59)
%%
{jour}\/{mois}\/{annee} {return (DATE);}
{heure}\:{minute}\:{seconde} {return (HEURE);}
[1-9][0-9]*|0 {return(ENT);}
[a-zA-Z][a-zA-Z0-9]* {return (IDF);}
\n {numero_ligne++;}
[ \t] {return (ERR);}








